// <auto-generated />
using System;
using BookStore.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace BookStore.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SCELIK")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.Entities.Concrete.Kitap", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("ID");

                    b.Property<short>("AktifMi")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("AKTIFMI");

                    b.Property<DateTime>("EklemeZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EKLEMEZAMANI");

                    b.Property<string>("KitapAdi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("KITAPADI");

                    b.Property<DateTime?>("PasifeAlmaZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("PASIFEALMAZAMANI");

                    b.Property<short>("SilindiMi")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("SILINDIMI");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SILMEZAMANI");

                    b.Property<string>("YazarId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("YAZARID");

                    b.HasKey("Id")
                        .HasName("KITAP_PK");

                    b.HasIndex("YazarId");

                    b.ToTable("KITAP", "SCELIK");
                });

            modelBuilder.Entity("BookStore.Entities.Concrete.KitapIcerik", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("ID");

                    b.Property<short>("AktifMi")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("AKTIFMI");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BASLIK");

                    b.Property<string>("Dosya")
                        .HasColumnType("CLOB")
                        .HasColumnName("DOSYA");

                    b.Property<DateTime>("EklemeZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EKLEMEZAMANI");

                    b.Property<string>("KitapId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("KITAPID");

                    b.Property<DateTime?>("PasifeAlmaZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("PASIFEALMAZAMANI");

                    b.Property<short>("SilindiMi")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("SILINDIMI");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SILMEZAMANI");

                    b.Property<string>("YazarId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("YAZARID");

                    b.HasKey("Id")
                        .HasName("KTP_ICRK_PK");

                    b.HasIndex("KitapId");

                    b.HasIndex("YazarId");

                    b.ToTable("KITAPICERIK", "SCELIK");
                });

            modelBuilder.Entity("BookStore.Entities.Concrete.Yazar", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("ID");

                    b.Property<short>("AktifMi")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("AKTIFMI");

                    b.Property<DateTime>("EklemeZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EKLEMEZAMANI");

                    b.Property<DateTime?>("PasifeAlmaZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("PASIFEALMAZAMANI");

                    b.Property<short>("SilindiMi")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("SILINDIMI");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SILMEZAMANI");

                    b.Property<string>("YazarAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)")
                        .HasColumnName("YAZARADI");

                    b.HasKey("Id")
                        .HasName("YAZAR_PK");

                    b.ToTable("YAZAR", "SCELIK");
                });

            modelBuilder.Entity("BookStore.Entities.Concrete.Kitap", b =>
                {
                    b.HasOne("BookStore.Entities.Concrete.Yazar", "Yazar")
                        .WithMany("Kitaplar")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("BookStore.Entities.Concrete.KitapIcerik", b =>
                {
                    b.HasOne("BookStore.Entities.Concrete.Kitap", "Kitap")
                        .WithMany("KitapIcerikler")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookStore.Entities.Concrete.Yazar", "Yazar")
                        .WithMany("KitapIcerikler")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("BookStore.Entities.Concrete.Kitap", b =>
                {
                    b.Navigation("KitapIcerikler");
                });

            modelBuilder.Entity("BookStore.Entities.Concrete.Yazar", b =>
                {
                    b.Navigation("KitapIcerikler");

                    b.Navigation("Kitaplar");
                });
#pragma warning restore 612, 618
        }
    }
}
